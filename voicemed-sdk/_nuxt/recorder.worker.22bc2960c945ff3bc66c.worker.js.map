{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/recorder.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_workerFunctions","init","config","sampleRate","record","inputBuffer","recBuffersL","push","recBuffersR","recLength","length","exportWAV","type","mergeBuffers","interleaved","interleave","bufferL","bufferR","dataview","encodeWAV","audioBlob","Blob","self","postMessage","exportMonoWAV","getBuffers","buffers","clear","recBuffers","result","Float32Array","offset","set","inputL","inputR","index","inputIndex","floatTo16BitPCM","output","input","Math","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","samples","mono","buffer","ArrayBuffer","DataView","setUint32","setUint16","addEventListener","e","data","command"],"mappings":"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","file":"recorder.worker.22bc2960c945ff3bc66c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/voicemed-sdk/_nuxt/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const _workerFunctions = {\n  init: function (config) {\n    _workerFunctions.sampleRate = config.sampleRate;\n  },\n  record: function (inputBuffer) {\n    _workerFunctions.recBuffersL.push(inputBuffer[0]);\n    _workerFunctions.recBuffersR.push(inputBuffer[1]);\n    _workerFunctions.recLength += inputBuffer[0].length;\n  },\n  exportWAV: function (type) {\n    var bufferL = _workerFunctions.mergeBuffers(_workerFunctions.recBuffersL, _workerFunctions.recLength);\n    var bufferR = _workerFunctions.mergeBuffers(_workerFunctions.recBuffersR, _workerFunctions.recLength);\n    var interleaved = _workerFunctions.interleave(_workerFunctions.bufferL, _workerFunctions.bufferR);\n    var dataview = _workerFunctions.encodeWAV(interleaved);\n    var audioBlob = new Blob([dataview], {type: type});\n\n    self.postMessage(audioBlob);\n  },\n  exportMonoWAV: function (type) {\n    var bufferL = _workerFunctions.mergeBuffers(_workerFunctions.recBuffersL, _workerFunctions.recLength);\n    var dataview = _workerFunctions.encodeWAV(bufferL, true);\n    var audioBlob = new Blob([dataview], {type: type});\n\n    self.postMessage(audioBlob);\n  },\n  getBuffers: function () {\n    var buffers = [];\n    buffers.push(_workerFunctions.mergeBuffers(_workerFunctions.recBuffersL, _workerFunctions.recLength));\n    buffers.push(_workerFunctions.mergeBuffers(_workerFunctions.recBuffersR, _workerFunctions.recLength));\n    self.postMessage(buffers);\n  },\n  clear: function () {\n    _workerFunctions.recLength = 0;\n    _workerFunctions.recBuffersL = [];\n    _workerFunctions.recBuffersR = [];\n  },\n  mergeBuffers: function (recBuffers, recLength) {\n    var result = new Float32Array(recLength);\n    var offset = 0;\n    for (var i = 0; i < recBuffers.length; i++) {\n      result.set(recBuffers[i], offset);\n      offset += recBuffers[i].length;\n    }\n    return result;\n  },\n  interleave: function (inputL, inputR) {\n    var length = inputL.length + inputR.length;\n    var result = new Float32Array(length);\n\n    var index = 0,\n      inputIndex = 0;\n\n    while (index < length) {\n      result[index++] = inputL[inputIndex];\n      result[index++] = inputR[inputIndex];\n      inputIndex++;\n    }\n    return result;\n  },\n  floatTo16BitPCM: function (output, offset, input) {\n    for (var i = 0; i < input.length; i++, offset += 2) {\n      var s = Math.max(-1, Math.min(1, input[i]));\n      output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n    }\n  },\n  writeString: function (view, offset, string) {\n    for (var i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  },\n  encodeWAV: function (samples, mono) {\n    var buffer = new ArrayBuffer(44 + samples.length * 2);\n    var view = new DataView(buffer);\n    /* RIFF identifier */\n    _workerFunctions.writeString(view, 0, 'RIFF');\n    /* file length */\n    view.setUint32(4, 32 + samples.length * 2, true);\n    /* RIFF type */\n    _workerFunctions.writeString(view, 8, 'WAVE');\n    /* format chunk identifier */\n    _workerFunctions.writeString(view, 12, 'fmt ');\n    /* format chunk length */\n    view.setUint32(16, 16, true);\n    /* sample format (raw) */\n    view.setUint16(20, 1, true);\n    /* channel count */\n    view.setUint16(22, mono ? 1 : 2, true);\n    /* sample rate */\n    view.setUint32(24, _workerFunctions.sampleRate, true);\n    /* byte rate (sample rate * block align) */\n    view.setUint32(28, _workerFunctions.sampleRate * 4, true);\n    /* block align (channel count * bytes per sample) */\n    view.setUint16(32, 4, true);\n    /* bits per sample */\n    view.setUint16(34, 16, true);\n    /* data chunk identifier */\n    _workerFunctions.writeString(view, 36, 'data');\n    /* data chunk length */\n    view.setUint32(40, samples.length * 2, true);\n\n    _workerFunctions.floatTo16BitPCM(view, 44, samples);\n\n    return view;\n  },\n  recLength: 0,\n  recBuffersL: [],\n  recBuffersR: [],\n  sampleRate: null\n}\nself.addEventListener('message',(e)=>{\n  switch (e.data.command) {\n    case 'init':\n      _workerFunctions.init(e.data.config);\n      break;\n    case 'record':\n      _workerFunctions.record(e.data.buffer);\n      break;\n    case 'exportWAV':\n      _workerFunctions.exportWAV(e.data.type);\n      break;\n    case 'exportMonoWAV':\n      _workerFunctions.exportMonoWAV(e.data.type);\n      break;\n    case 'getBuffers':\n      _workerFunctions.getBuffers();\n      break;\n    case 'clear':\n      _workerFunctions.clear();\n      break;\n  }\n})\n"],"sourceRoot":""}