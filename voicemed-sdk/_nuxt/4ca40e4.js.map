{"version":3,"sources":["webpack:///./pages/ml/exerciseexecutor/quiz.vue","webpack:///./pages/ml/exerciseexecutor/quiz.vue?99c7","webpack:///./pages/ml/exerciseexecutor/quiz.vue?7af1"],"names":["name","mixins","basepage","data","currentSurveyResult","survey","progress","total","current","replies","points","next","prev","tags","results","finish","success","challenges","requested","list","challengeprogress","exid","this","$route","params","id","programid","fromprogram","withindex","backto","exerciseThumb","loaded","ended","transition","mode","css","beforeEnter","el","$anime","set","scale","opacity","enter","done","targets","duration","easing","complete","leave","document","body","classList","remove","watch","_this","$set","cQuestion","getCurrentExercise","quiz","questions","isScreen","type","isText","_options","options","find","v","key","tag","computed","_objectSpread","mapGetters","getCurrentUser","getExercises","isCurrentUserGuest","localCurrentUser","$nuxt","$config","env","environment","indexOf","$useractions","retrieveMeta","welcomeImage","_welcomeImage","challengeImage","_challengeImage","currentCardType","length","_q","overprogress","exercise","methods","mapActions","setCurrentExerciseIndex","setCurrentExerciseById","setCurrentUser","setIsGuest","addDoneExercise","setCurrentExerciseByData","getRuleByQuestionType","question","getQuestionType","value","test","$t","charTypeAllowed","checkOptionTag","option","repliedQuestion","prevStep","pop","exitClick","nextStep","_this2","push","preserveNext","earnPoints","Object","keys","reduce","carry","resultToShow","i","item","pointRange","max","$nextTick","$root","$emit","completed","suffix","buildSuffix","$router","localePath","passed","additionalData","quizAnswers","questionnaireTags","forEach","questionIndex","tmpQ","parseInt","reply","_found","$exerciseManager","completeExercise","then","r","response","catch","e","$captureException","$analytics","logEvent","finally","hasretry","title","error","leaveBtn","click","startAgain","resetEvent","exerciseStepBack","program_id","querySelector","add","init","Array","isArray","pointBasedResult","map","min","sort","a","b","parseFloat","handleBack","retrieveCurrentExerciseAndSet","_this3","hasJoinedProgramById","_joinProgram","getProgramById","exercises","filter","program_index","mounted","_this4","$capacitor","isNativePlatform","$backEmitter","callback","hasNext","hasInfo","hasBack","show","startExercise","setScreenName","beforeDestroy","component","_vm","_c","_self","class","scopedSlots","_u","fn","staticClass","_v","_s","toFixed","attrs","proxy","model","$$v","expression","_l","idx","_e","_defineProperty","on","$event","domProps","text","thumbnail","screenContent","nuxtloading","installComponents","FullpageCard","default"],"mappings":"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","file":"4ca40e4.js","sourcesContent":["\nimport basepage from \"~/mixins.js/exercisepage\";\nimport {mapActions, mapGetters} from 'vuex'\nimport {Wave} from \"@foobar404/wave\";\n\nexport default {\n  name: 'quizPlayer',\n  mixins: [basepage],\n  data() {\n    return {\n      currentSurveyResult: null,\n      survey: {\n        progress: 0,\n        total: 0,\n        current: 0,\n        replies: {},\n        points: {},\n        next: -1,\n        prev: [],\n        tags: {},\n        results: []\n      },\n      finish: false,\n      success: false,\n      challenges: {\n        requested: false,\n        list: [],\n        challengeprogress: 0\n      },\n      exid: (this.$route.params.id),\n      programid: (this.$route.params.fromprogram || false),\n      withindex: (this.$route.params.withindex || false),\n      backto: (this.$route.params.backto || false),\n      name: \"postPlayer\",\n      exerciseThumb: null,\n      loaded: false,\n      ended: false,\n    }\n  },\n  transition: {\n    name: 'fade',\n    mode: 'out-in',\n    css: false,\n    beforeEnter(el) {\n      this.$anime.set(el, {\n        scale: 1,\n        opacity: 0\n      })\n    },\n    enter(el, done) {\n      this.$anime({\n        targets: el,\n        opacity: [0, 1],\n        duration: 500,\n        easing: 'easeInOutSine',\n        complete: done\n      })\n    },\n    leave(el, done) {\n      this.$anime({\n        targets: el,\n        opacity: [1, 0],\n        duration: 500,\n        easing: 'easeInOutSine',\n        complete: done\n      });\n      document.body.classList.remove('bodyblock')\n    }\n  },\n  /*\n  beforeRouteLeave(_to, _from, next) {\n\n  },*/\n  watch: {\n    \"survey.current\": function () {\n      console.log('change current Question');\n      this.survey.next = -1; //Reset next on each change\n      if (this.survey.current === 0) {\n        this.$set(this.survey, 'prev', []);\n      }\n      const cQuestion = this.getCurrentExercise.quiz.questions[this.survey.current];\n      if (cQuestion) {\n        let isScreen = (cQuestion.type && (cQuestion.type === 'screen')) ? true : false;\n        let isText = (cQuestion.type && (cQuestion.type === 'open' || cQuestion.type === 'openext')) ? true : false;\n\n        if (this.survey.replies[this.survey.current]) {\n          //Check if there is a reply, if yes, ensure next & tag:\n          if (isScreen) {\n            this.survey.replies[this.survey.current] = true;\n          } else if(isText){\n            //Dont' touch value\n          } else {\n            const _options = cQuestion.options.find((v) => v.key === this.survey.replies[this.survey.current]);\n            console.log('got picked option', _options);\n            if (_options.next) {\n              this.survey.next = _options.next;\n            }\n            if (_options.tag) {\n              this.survey.tags[this.survey.current] = _options.tag;\n            }\n            if (_options.points) {\n              this.survey.points[this.survey.current] = _options.points;\n            }\n          }\n        }\n        if ((isScreen||isText) && cQuestion.next) {\n          this.survey.next = cQuestion.next\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getCurrentUser: 'getCurrentUser',\n      getExercises: 'getExercises',\n      getCurrentExercise: 'getCurrentExercise',\n      isCurrentUserGuest: 'isCurrentUserGuest'\n    }),\n    localCurrentUser() {\n      if($nuxt.$config.env.environment.indexOf('library') > -1) {\n        return $nuxt.$useractions.retrieveMeta();\n      } else {\n        return this.getCurrentUser;\n      }\n    },\n    welcomeImage() {\n      return _welcomeImage;\n    },\n    challengeImage() {\n      return _challengeImage;\n    },\n\n    currentCardType() {\n      if (!this.getCurrentExercise) {\n        return null\n      }\n      if (!this.getCurrentExercise.quiz) {\n        return null;\n      }\n      if (this.survey.current >= this.getCurrentExercise.quiz.length) {\n        return null;\n      }\n      const _q = this.getCurrentExercise.quiz.questions[this.survey.current];\n      if (_q && _q.type) {\n        return _q.type;\n      }\n      return \"radio\"\n    },\n    overprogress() {\n      return this.survey.current / this.survey.total * 100;\n    },\n    exercise() {\n      return this.getCurrentExercise\n    },\n  },\n  methods: {\n    ...mapActions({\n      setCurrentExerciseIndex: 'setCurrentExerciseIndex',\n      setCurrentExerciseById: 'setCurrentExerciseById',\n      setCurrentUser: 'setCurrentUser',\n      setIsGuest: 'setIsGuest',\n      addDoneExercise: 'addDoneExercise',\n      setCurrentExerciseByData: 'setCurrentExerciseByData',\n    }),\n    getRuleByQuestionType(question) {\n      const _type = this.getQuestionType(question);\n      if(_type ==='number') {\n        return [\n          value => {\n            const pattern = /^[0-9]+$/\n            return pattern.test(value) || $nuxt.$t('rules.invalidnumber')\n          },\n        ]\n      }\n      return [\n        value=>true\n      ]\n    },\n    getQuestionType(question) {\n      if(typeof question.charTypeAllowed !=='undefined') {\n        if(question.charTypeAllowed ==='1' || question.charTypeAllowed ===1) {\n          return 'number';\n        }\n      }\n      return \"text\";\n    },\n    checkOptionTag(option) {\n      console.log('got option pick:', option);\n      if (option.tag) {\n        this.survey.tags[this.survey.current] = option.tag;\n      } else {\n        this.survey.tags[this.survey.current] = false;\n      }\n      if (option.points) {\n        this.survey.points[this.survey.current] = option.points;\n      } else {\n        this.survey.points[this.survey.current] = 0;\n      }\n      if (option.next) {\n        this.survey.next = option.next\n      } else {\n        this.survey.next = -1\n      }\n    },\n    repliedQuestion() {\n      if(this.currentSurveyResult) {\n        return false;\n      }\n      const cQuestion = this.getCurrentExercise.quiz.questions[this.survey.current];\n      if (cQuestion) {\n        let isScreen = (cQuestion.type && (cQuestion.type === 'screen')) ? true : false;\n        if (isScreen) {\n          //Screen question never block flow\n          return false;\n        }\n      }\n      if (typeof this.survey.replies[this.survey.current] === \"undefined\") {\n        return true\n      }\n      return false;\n    },\n    prevStep() {\n      if (this.survey.prev.length > 0) {\n        this.survey.current = this.survey.prev.pop();\n        return;\n      }\n      if (this.survey.current > 0) {\n        this.survey.current -= 1;\n        return\n      }\n      this.exitClick();\n    },\n    nextStep() {\n      this.survey.prev.push(this.survey.current);\n      console.log('ready to move Next', this.survey.next)\n      if(this.survey.next !== -2) {\n        if (this.survey.next > -1 && this.survey.next <= this.survey.total - 1) {\n          //Set current as index in next:\n          console.log('check passed', this.survey.next)\n          if (this.currentCardType === 'screen') {\n            this.survey.replies[this.survey.current] = true;\n          }\n          const preserveNext = this.survey.next;\n          console.log('set next as ', preserveNext)\n          this.survey.current = preserveNext;\n          return;\n        }\n        if (this.survey.current < this.survey.total - 1) {\n          this.survey.current += 1;\n          return;\n        }\n      }\n\n      const earnPoints = Object.keys(this.survey.points).reduce((carry, key) => {\n        return carry + this.survey.points[key];\n      }, 0);\n\n      console.log('ready to compute points: ', earnPoints,this.survey.results);\n      if (this.survey.results && this.survey.results.length > 0 &&!this.currentSurveyResult) {\n        let resultToShow = null;\n        for(let i =0;i<this.survey.results.length;i++) {\n          const item = this.survey.results[i];\n          if(earnPoints>=item.pointRange.max) {\n            resultToShow = item;\n            break;\n          }\n        }\n        console.log('found result?', resultToShow)\n        if (resultToShow) {\n          if (this.survey.next !== -2) {\n          this.currentSurveyResult = resultToShow;\n          this.survey.current += 1;\n          this.$nextTick(()=>{\n            this.$root.$emit('showBack', false);\n          })\n          return;\n          } else {\n            console.log('is -2 go out');\n          }\n        }\n      }\n\n\n      if (this.isCurrentUserGuest) {\n        this.getCurrentExercise.completed = true;\n        this.$root.$emit('completedExercise', this.getCurrentExercise);\n        this.$nextTick(() => {\n          this.$root.$emit('showPager', {\"show\": false});\n          let suffix = this.buildSuffix();\n          if (suffix.length > 0) {\n            suffix = \"/\" + suffix\n          }\n          this.$router.push($nuxt.localePath(\"/ml/greetings/\" + this.exid + suffix));\n        });\n        return;\n      }\n\n      let passed = false;\n      const additionalData = {\n        quizAnswers: {},\n        questionnaireTags: {},\n        earnPoints: earnPoints\n      }\n      Object.keys(this.survey.replies).forEach((questionIndex) => {\n        let tmpQ = this.getCurrentExercise.quiz.questions[parseInt(questionIndex)];\n        if (!tmpQ) {\n          return;\n        }\n        if (tmpQ.type === 'open' || tmpQ.type === 'openext') {\n          additionalData.quizAnswers[questionIndex] = (this.survey.replies[questionIndex])\n        } else if (tmpQ.type === 'screen') {\n          additionalData.quizAnswers[questionIndex] = (true)\n        } else {\n          const reply = tmpQ.options.find((item) => item.key == this.survey.replies[questionIndex])\n          if (reply) {\n            additionalData.quizAnswers[questionIndex] = (reply)\n          } else {\n            //If question was skipped...\n            additionalData.quizAnswers[questionIndex] = (null);\n          }\n        }\n      })\n\n\n      Object.keys(this.survey.tags).forEach((questionIndex) => {\n        let tmpQ = this.survey.tags[questionIndex]\n        if (!tmpQ) {\n          return;\n        }\n        let _found = typeof additionalData.questionnaireTags[tmpQ] !== 'undefined' ? additionalData.questionnaireTags[tmpQ] : 0;\n        _found += 1;\n        additionalData.questionnaireTags[tmpQ] = _found;\n      })\n\n      console.log('ready to send quest replies', additionalData.quizAnswers, additionalData.questionnaireTags);\n      this.$exerciseManager.completeExercise(this.getCurrentExercise, null, null, additionalData,this.localCurrentUser).then((r) => {\n        console.log('got record result', r);\n        if (r.exercise && r.response && r.exercise.completed) {\n          passed = true;\n          this.getCurrentExercise.completed = r.exercise.completed;\n        } else {\n          passed = $nuxt.$t('errors.global.msg_restapi');\n        }\n      }).catch((e) => {\n        console.error(\"Errore invio api [breathing_exercises_video]:\", e);\n        this.$captureException(e);\n        passed = $nuxt.$t('errors.global.title');\n        this.$analytics.logEvent(\"error\", {\n          \"title\": 'cannot send exercise video'\n        });\n      }).finally(() => {\n        if (passed === true) {\n          this.addDoneExercise(1);\n          this.$nextTick(() => {\n            this.$root.$emit('showPager', {\"show\": false});\n            let suffix = this.buildSuffix();\n            if (suffix.length > 0) {\n              suffix = \"/\" + suffix\n            }\n            this.$router.push($nuxt.localePath(\"/ml/greetings/\" + this.exid + suffix));\n          });\n        } else {\n          //Show Error?\n          this.$root.$emit('showError', {\n            hasretry: true,\n            title: \"Uh-oh!<br/>\",\n            error: passed,\n            leaveBtn: this.$t('generic.startanyway'),\n            click: () => {\n              this.startAgain();\n              return true;\n            },\n            resetEvent: function () {\n              this.exerciseStepBack()\n              return true;\n            }\n          });\n        }\n      });\n    },\n    exitClick() {\n      this.$analytics.logEvent('exercise_quit', {\n        \"id\": this.getCurrentExercise.id,\n        \"name\": this.getCurrentExercise.title,\n        \"program_id\": this.getCurrentExercise.program_id || null,\n        \"type\": this.getCurrentExercise.type,\n      })\n      if (document.querySelector('#__nuxt')) {\n        document.querySelector('#__nuxt').classList.add('quit');\n      }\n      this.exerciseStepBack()\n    },\n    init: function () {\n      console.log('ready for exercise..', this.getCurrentExercise)\n      if (this.getCurrentExercise.quiz.questions && Array.isArray(this.getCurrentExercise.quiz.questions)) {\n        this.survey.total = this.getCurrentExercise.quiz.questions.length;\n        this.survey.progress = 0;\n        this.survey.current = 0;\n        this.survey.next = -1;\n        this.survey.prev = [];\n        if (this.getCurrentExercise.quiz.pointBasedResult) {\n          this.survey.results = this.getCurrentExercise.quiz.pointBasedResult.map((item) => {\n            console.log('map me',item, item.pointRange)\n            if (item.pointRange) {\n              if (typeof item.pointRange.min === 'undefined') {\n                item.pointRange.min = 0;\n              }\n              if (typeof item.pointRange.max === 'undefined') {\n                item.pointRange.max = 0;\n              }\n              if (item.pointRange.max === null) {\n                item.pointRange.max = 0;\n              }\n              if (item.pointRange.min === null) {\n                item.pointRange.min = 0;\n              }\n              if (item.pointRange.min) {\n                item.pointRange.min = parseInt(item.pointRange.min)\n              } else {\n                item.pointRange.min = 0;\n              }\n              if (item.pointRange.max) {\n                item.pointRange.max = parseInt(item.pointRange.max)\n              } else {\n                item.pointRange.max = 0;\n              }\n\n            }\n            return item\n          })\n          //sort point based results:\n          this.survey.results.sort(function(a, b) {\n            return parseFloat(b.pointRange.max) - parseFloat(a.pointRange.max);\n          });\n          //Go sorted result.\n        }\n        this.loaded = true;\n      } else {\n        this.$root.$emit('showToast', $nuxt.$t('errors.global.msg_noquestions'), 'error');\n        console.warn('cannot find exercise ', this.exid);\n        this.exerciseStepBack()\n      }\n    },\n    handleBack() {\n      console.log('got backbutton');\n      this.prevStep()\n    },\n    retrieveCurrentExerciseAndSet() {\n      if (this.hasJoinedProgramById(this.programid)) {\n        const _joinProgram = this.getProgramById(this.programid);\n        if (this.withindex > -1) {\n          const list = _joinProgram.exercises.filter((i) => i.id === this.exid && i.program_index == this.withindex);\n          if (list.length > 0) {\n            this.setCurrentExerciseByData(list[0])\n          }\n        } else {\n          this.setCurrentExerciseByData(null)\n        }\n      } else {\n        this.setCurrentExerciseById(this.exid);\n      }\n    }\n  },\n  mounted() {\n    //window.testPP = this;\n    if (this.$capacitor && this.$capacitor.isNativePlatform()) {\n      this.$backEmitter.callback = this.handleBack;\n    }\n    if (this.exid) {\n      this.retrieveCurrentExerciseAndSet();\n      if (this.getCurrentExercise) {\n        this.init()\n      } else {\n        console.warn('cannot find exercise ', this.exid);\n        this.exerciseStepBack()\n      }\n      this.$nextTick(() => {\n        this.name = \"quizPlayer\";\n        this.hasNext = false;\n        this.hasInfo = false;\n        this.hasBack = false;\n        this.$root.$emit('showPager', {show: false});\n        this.$root.$emit('showOverlay', {show: false});\n        this.$analytics.logEvent('exercise_reading', {\n          \"id\": this.getCurrentExercise.id,\n          \"name\": this.getCurrentExercise.title,\n          \"program_id\": this.getCurrentExercise.program_id || null,\n          \"program_name\": this.hasJoinedProgramById(this.getCurrentExercise.program_id) ?\n              this.getProgramById(this.getCurrentExercise.program_id).name : null,\n          \"type\": this.getCurrentExercise.type,\n        })\n        this.$exerciseManager.startExercise(this.getCurrentExercise);\n        this.$analytics.setScreenName(this.getCurrentExercise.title + \" survey page\");\n      });\n    } else {\n      console.warn('cannot find exercise[2] ', this.exid);\n      this.exerciseStepBack()\n    }\n  },\n  beforeDestroy: function () {\n    if (this.$capacitor && this.$capacitor.isNativePlatform()) {\n      console.log('remove backbutton');\n      this.$backEmitter.callback = null\n    }\n  }\n}\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./quiz.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./quiz.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./quiz.vue?vue&type=template&id=672efa9c\"\nimport script from \"./quiz.vue?vue&type=script&lang=js\"\nexport * from \"./quiz.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {FullpageCard: require('/Users/francescolotruglio/Lavori/VoiceMed/VoiceMedSdk-Sources/voicemed-layoutsdk/components/fullpage-card.vue').default})\n"],"sourceRoot":""}